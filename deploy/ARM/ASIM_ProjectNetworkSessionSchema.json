{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "_ASIM_ProjectNetworkSessionSchema",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "ASIM_ProjectNetworkSessionSchema",
            "category": "ASIM",
            "FunctionAlias": "ASIM_ProjectNetworkSessionSchema",
            "query": "T\n| project\n    \/\/ Common Mandatory Fields\n      todatetime(column_ifexists('TimeGenerated', ''))\n      , tostring(column_ifexists('Type', ''))\n      , toint(column_ifexists('EventCount', ''))\n    , todatetime(column_ifexists('EventStartTime', ''))\n    , todatetime(column_ifexists('EventEndTime', ''))\n    , tostring(column_ifexists('EventType', ''))\n    , tostring(column_ifexists('EventResult', ''))\n    , tostring(column_ifexists('EventProduct', ''))\n    , tostring(column_ifexists('EventVendor', ''))\n    , tostring(column_ifexists('EventSchema', ''))\n    , tostring(column_ifexists('EventSchemaVersion', ''))\n    , tostring(column_ifexists('Dvc', ''))\n    \/\/ Common Recommended Fields\n    , tostring(column_ifexists('EventResultDetails', ''))\n    , tostring(column_ifexists('EventSeverity', ''))\n    , tostring(column_ifexists('EventUid', ''))\n    , tostring(column_ifexists('DvcIpAddr', ''))\n    , tostring(column_ifexists('DvcHostname', ''))\n    , tostring(column_ifexists('DvcDomain', ''))\n    , tostring(column_ifexists('DvcDomainType', ''))\n    , tostring(column_ifexists('DvcFQDN', ''))\n    , tostring(column_ifexists('DvcId', ''))\n    , tostring(column_ifexists('DvcIdType', ''))\n    , tostring(column_ifexists('DvcAction', ''))\n    \/\/ NetworkSession Mandatory Fields\n    , tostring(column_ifexists('Dst', ''))\n    , tostring(column_ifexists('Src', ''))\n    \/\/ NetworkSession Recommended Fields\n    , tostring(column_ifexists('ASimMatchingHostname', ''))\n    , tostring(column_ifexists('ASimMatchingIpAddr', ''))\n    , tostring(column_ifexists('DstDomain', ''))\n    , tostring(column_ifexists('DstHostname', ''))\n    , tostring(column_ifexists('DstIpAddr', ''))\n    , tostring(column_ifexists('SrcDomain', ''))\n    , tostring(column_ifexists('SrcHostname', ''))\n    , tostring(column_ifexists('IpAddr', ''))\n    , tostring(column_ifexists('SrcIpAddr', ''))\n    \/\/ NetworkSession Optional Fields\n    , column_ifexists('AdditionalFields', '')\n    , toint(column_ifexists('DstPortNumber', ''))\n    , toint(column_ifexists('ThreatConfidence', ''))\n| project-away Column*",
            "version": 1,
            "functionParameters": "T:(TimeGenerated:datetime)"
          }
        }
      ]
    }
  ]
}