{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "12283605102133148730"
    }
  },
  "parameters": {
    "Workspace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('Workspace'), '_ASIM_ProjectNetworkSessionOptional')]",
      "properties": {
        "etag": "*",
        "displayName": "ASIM_ProjectNetworkSessionOptional",
        "category": "ASIM",
        "functionAlias": "ASIM_ProjectNetworkSessionOptional",
        "query": "    T\r\n    | project\r\n      // Common Mandatory Fields\r\n        todatetime(column_ifexists('TimeGenerated', ''))\r\n      , tostring(column_ifexists('Type', ''))\r\n      , toint(column_ifexists('EventCount', ''))\r\n      , todatetime(column_ifexists('EventStartTime', ''))\r\n      , todatetime(column_ifexists('EventEndTime', ''))\r\n      , tostring(column_ifexists('EventType', ''))\r\n      , tostring(column_ifexists('EventResult', ''))\r\n      , tostring(column_ifexists('EventProduct', ''))\r\n      , tostring(column_ifexists('EventVendor', ''))\r\n      , tostring(column_ifexists('EventSchema', ''))\r\n      , tostring(column_ifexists('EventSchemaVersion', ''))\r\n      , tostring(column_ifexists('EventSeverity', ''))\r\n      , tostring(column_ifexists('Dvc', ''))\r\n      // Common Recommended Fields\r\n      , tostring(column_ifexists('EventResultDetails', ''))\r\n      , tostring(column_ifexists('EventUid', ''))\r\n      , tostring(column_ifexists('DvcIpAddr', ''))\r\n      , tostring(column_ifexists('DvcHostname', ''))\r\n      , tostring(column_ifexists('DvcDomain', ''))\r\n      // NetworkSession Mandatory Fields\r\n      // NetworkSession Recommended Fields\r\n      , tostring(column_ifexists('ASimMatchingHostname', ''))\r\n      , tostring(column_ifexists('ASimMatchingIpAddr', ''))\r\n      , tostring(column_ifexists('Dst', ''))\r\n      , tostring(column_ifexists('DstDomain', ''))\r\n      , tostring(column_ifexists('DstHostname', ''))\r\n      , tostring(column_ifexists('DstIpAddr', ''))\r\n      , tostring(column_ifexists('Src', ''))\r\n      , tostring(column_ifexists('SrcDomain', ''))\r\n      , tostring(column_ifexists('SrcHostname', ''))\r\n      , tostring(column_ifexists('SrcIpAddr', ''))\r\n      // NetworkSession Optional Fields\r\n      , tostring(column_ifexists('DstDomainType', ''))\r\n      , tostring(column_ifexists('DstScopeId', ''))\r\n      , tostring(column_ifexists('DvcScope', ''))\r\n      , tostring(column_ifexists('DvcScopeId', ''))\r\n      , todynamic(column_ifexists('AdditionalFields', ''))\r\n      , tostring(column_ifexists('DstAppId', ''))\r\n      , tostring(column_ifexists('DstAppName', ''))\r\n      , tostring(column_ifexists('DstAppType', ''))\r\n      , tolong(column_ifexists('DstBytes', ''))\r\n      , tostring(column_ifexists('DstDescription', ''))\r\n      , tostring(column_ifexists('DstDeviceType', ''))\r\n      , tostring(column_ifexists('DvcDomainType', ''))\r\n      , tostring(column_ifexists('SrcDomainType', ''))\r\n      , tostring(column_ifexists('DstDvcId', ''))\r\n      , tostring(column_ifexists('DstFQDN', ''))\r\n      , tostring(column_ifexists('DstGeoCity', ''))\r\n      , tostring(column_ifexists('DstGeoCountry', ''))\r\n      , tostring(column_ifexists('DstGeoRegion', ''))\r\n      , tostring(column_ifexists('DstInterfaceGuid', ''))\r\n      , tostring(column_ifexists('DstInterfaceName', ''))\r\n      , tostring(column_ifexists('DstMacAddr', ''))\r\n      , tostring(column_ifexists('DstNatIpAddr', ''))\r\n      , toint(column_ifexists('DstNatPortNumber', ''))\r\n      , tostring(column_ifexists('DstOriginalUserType', ''))\r\n      , tolong(column_ifexists('DstPackets', ''))\r\n      , toint(column_ifexists('DstPortNumber', ''))\r\n      , tostring(column_ifexists('DstProcessName', ''))\r\n      , tostring(column_ifexists('DstProcessId', ''))\r\n      , tostring(column_ifexists('DstProcessGuid', ''))\r\n      , tostring(column_ifexists('DstUserId', ''))\r\n      , tostring(column_ifexists('DstUsername', ''))\r\n      , tostring(column_ifexists('DstUsernameType', ''))\r\n      , tostring(column_ifexists('DstUserType', ''))\r\n      , tostring(column_ifexists('DstVlanId', ''))\r\n      , tostring(column_ifexists('DstZone', ''))\r\n      , tostring(column_ifexists('DvcAction', ''))\r\n      , tostring(column_ifexists('DvcDescription', ''))\r\n      , tostring(column_ifexists('DvcFQDN', ''))\r\n      , tostring(column_ifexists('DvcId', ''))\r\n      , tostring(column_ifexists('DvcInboundInterface', ''))\r\n      , tostring(column_ifexists('DvcInterface', ''))\r\n      , tostring(column_ifexists('DvcMacAddr', ''))\r\n      , tostring(column_ifexists('DvcOriginalAction', ''))\r\n      , tostring(column_ifexists('DvcOs', ''))\r\n      , tostring(column_ifexists('DvcOsVersion', ''))\r\n      , tostring(column_ifexists('DvcOutboundInterface', ''))\r\n      , tostring(column_ifexists('DvcZone', ''))\r\n      , tostring(column_ifexists('EventMessage', ''))\r\n      , tostring(column_ifexists('EventOriginalResultDetails', ''))\r\n      , tostring(column_ifexists('EventOriginalSeverity', ''))\r\n      , tostring(column_ifexists('EventOriginalSubType', ''))\r\n      , tostring(column_ifexists('EventOriginalType', ''))\r\n      , tostring(column_ifexists('EventOriginalUid', ''))\r\n      , tostring(column_ifexists('EventOwner', ''))\r\n      , tostring(column_ifexists('EventProductVersion', ''))\r\n      , tostring(column_ifexists('EventReportUrl', ''))\r\n      , tostring(column_ifexists('EventSubType', ''))\r\n      , tostring(column_ifexists('NetworkApplicationProtocol', ''))\r\n      , tolong(column_ifexists('NetworkBytes', ''))\r\n      , tostring(column_ifexists('NetworkConnectionHistory', ''))\r\n      , tostring(column_ifexists('NetworkDirection', ''))\r\n      , toint(column_ifexists('NetworkDuration', ''))\r\n      , toint(column_ifexists('NetworkIcmpCode', ''))\r\n      , tostring(column_ifexists('NetworkIcmpType', ''))\r\n      , tolong(column_ifexists('NetworkPackets', ''))\r\n      , tostring(column_ifexists('NetworkProtocol', ''))\r\n      , tostring(column_ifexists('NetworkProtocolVersion', ''))\r\n      , tostring(column_ifexists('NetworkRuleName', ''))\r\n      , toint(column_ifexists('NetworkRuleNumber', ''))\r\n      , tostring(column_ifexists('NetworkSessionId', ''))\r\n      , tostring(column_ifexists('Rule', ''))\r\n      , tostring(column_ifexists('SrcAppId', ''))\r\n      , tostring(column_ifexists('SrcAppName', ''))\r\n      , tostring(column_ifexists('SrcAppType', ''))\r\n      , tolong(column_ifexists('SrcBytes', ''))\r\n      , tostring(column_ifexists('SrcDescription', ''))\r\n      , tostring(column_ifexists('SrcDeviceType', ''))\r\n      , tostring(column_ifexists('SrcDvcId', ''))\r\n      , tostring(column_ifexists('SrcFQDN', ''))\r\n      , tostring(column_ifexists('SrcGeoCity', ''))\r\n      , tostring(column_ifexists('SrcGeoCountry', ''))\r\n      , tostring(column_ifexists('SrcGeoRegion', ''))\r\n      , tostring(column_ifexists('SrcInterfaceGuid', ''))\r\n      , tostring(column_ifexists('SrcInterfaceName', ''))\r\n      , tostring(column_ifexists('SrcMacAddr', ''))\r\n      , tostring(column_ifexists('SrcNatIpAddr', ''))\r\n      , toint(column_ifexists('SrcNatPortNumber', ''))\r\n      , tostring(column_ifexists('SrcOriginalUserType', ''))\r\n      , tolong(column_ifexists('SrcPackets', ''))\r\n      , toint(column_ifexists('SrcPortNumber', ''))\r\n      , tostring(column_ifexists('SrcProcessName', ''))\r\n      , tostring(column_ifexists('SrcProcessId', ''))\r\n      , tostring(column_ifexists('SrcProcessGuid', ''))\r\n      , tostring(column_ifexists('SrcUserId', ''))\r\n      , tostring(column_ifexists('SrcUsername', ''))\r\n      , tostring(column_ifexists('SrcUsernameType', ''))\r\n      , tostring(column_ifexists('SrcUserType', ''))\r\n      , tostring(column_ifexists('SrcVlanId', ''))\r\n      , tostring(column_ifexists('SrcZone', ''))\r\n      , tostring(column_ifexists('ThreatCategory', ''))\r\n      , toint(column_ifexists('ThreatConfidence', ''))\r\n      , todatetime(column_ifexists('ThreatFirstReportedTime', ''))\r\n      , tostring(column_ifexists('ThreatId', ''))\r\n      , tostring(column_ifexists('ThreatIpAddr', ''))\r\n      , todatetime(column_ifexists('ThreatLastReportedTime', ''))\r\n      , tostring(column_ifexists('ThreatName', ''))\r\n      , tostring(column_ifexists('ThreatOriginalConfidence', ''))\r\n      , tostring(column_ifexists('ThreatOriginalRiskLevel', ''))\r\n      , toint(column_ifexists('ThreatRiskLevel', ''))\r\n      , tostring(column_ifexists('SrcScopeId', ''))\r\n      , tostring(column_ifexists('_ItemId', ''))\r\n      , toint(column_ifexists('Duration', ''))\r\n      // Network Session Alias Fields\r\n      , tostring(column_ifexists('Hostname', ''))\r\n      , tostring(column_ifexists('InnerVlanId', ''))\r\n      , tostring(column_ifexists('IpAddr', ''))\r\n      , tostring(column_ifexists('OuterVlanId', ''))\r\n      , tostring(column_ifexists('SessionId', ''))\r\n      , tostring(column_ifexists('User', ''))\r\n    | project-away Column*",
        "version": 1,
        "functionParameters": "T:(*)"
      }
    }
  ]
}