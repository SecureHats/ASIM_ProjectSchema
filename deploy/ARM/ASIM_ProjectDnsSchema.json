{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "1768962342318103127"
    }
  },
  "parameters": {
    "Workspace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('Workspace'), '_ASIM_ProjectDnsSchema')]",
      "properties": {
        "version": 1,
        "category": "ASIM",
        "displayName": "ASIM_ProjectDnsSchema",
        "query": "    let Parser =\r\n    T\r\n    | project\r\n        // Common Mandatory Fields\r\n          todatetime(TimeGenerated)\r\n        , tostring(column_ifexists('Type', ''))\r\n        , toint(column_ifexists('EventCount', ''))\r\n        , todatetime(column_ifexists('EventStartTime', ''))\r\n        , todatetime(column_ifexists('EventEndTime', ''))\r\n        , tostring(column_ifexists('EventType', ''))\r\n        , tostring(column_ifexists('EventResult', ''))\r\n        , tostring(column_ifexists('EventProduct', ''))\r\n        , tostring(column_ifexists('EventVendor', ''))\r\n        , tostring(column_ifexists('EventSchema', ''))\r\n        , tostring(column_ifexists('EventSchemaVersion', ''))\r\n        , tostring(column_ifexists('EventSeverity', ''))\r\n        , tostring(column_ifexists('Dvc', ''))\r\n        // Common Recommended Fields\r\n        , tostring(column_ifexists('EventResultDetails', ''))\r\n        , tostring(column_ifexists('EventUid', ''))\r\n        , tostring(column_ifexists('DvcIpAddr', ''))\r\n        , tostring(column_ifexists('DvcHostname', ''))\r\n        , tostring(column_ifexists('DvcDomain', ''))\r\n        // Dns Mandatory Fields\r\n        , tostring(column_ifexists('Src', ''))\r\n        // Dns Recommended Fields\r\n        , tostring(column_ifexists('DnsQuery', ''))\r\n        , tostring(column_ifexists('DnsQueryClassName', ''))\r\n        , tostring(column_ifexists('Dst', ''))\r\n        , tostring(column_ifexists('SrcDomain', ''))\r\n        , tostring(column_ifexists('SrcHostname', ''))\r\n        , tostring(column_ifexists('SrcIpAddr', ''))\r\n        , tostring(column_ifexists('TransactionIdHex', ''))\r\n        , tostring(column_ifexists('_ItemId', ''))\r\n    | project-away Column*\r\n    ;\r\n    let OptionalFields = (optional:bool) {\r\n      T\r\n      | where (optional)\r\n      | invoke ASIM_ProjectDnsOptional()\r\n      | project-away Column*\r\n      };\r\n      union isfuzzy = false\r\n      (Parser | join kind=leftouter OptionalFields(optional) on $left._ItemId == $right._ItemId)\r\n    ",
        "functionParameters": "T:(TimeGenerated:datetime, _ItemId:string), optional:bool=false",
        "functionAlias": "ASIM_ProjectDnsSchema"
      }
    }
  ]
}