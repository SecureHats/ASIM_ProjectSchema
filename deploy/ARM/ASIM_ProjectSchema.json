{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "965269934683643584"
    }
  },
  "parameters": {
    "Workspace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('Workspace'), 'ASIM_ProjectSchema')]",
      "properties": {
        "version": 1,
        "category": "ASIM",
        "displayName": "ASIM_ProjectSchema",
        "query": "    let NetworkSession =\r\n        T\r\n        | where EventSchema == 'NetworkSession'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectNetworkSessionSchema()\r\n    ;\r\n    let NetworkSessionOptional =\r\n        T\r\n        | where EventSchema == 'NetworkSession'\r\n            and (optional)\r\n        | invoke ASIM_ProjectNetworkSessionOptional()\r\n    ;\r\n    let Authentication =\r\n        T\r\n        | where EventSchema == 'Authentication'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectAuthenticationSchema()\r\n    ;\r\n    let AuthenticationOptional =\r\n        T\r\n        | where EventSchema == 'Authentication'\r\n            and (optional)\r\n        | invoke ASIM_ProjectAuthenticationOptional()\r\n    ;\r\n    let AuditEvent =\r\n        T\r\n        | where EventSchema == 'AuditEvent'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectAuditEventSchema()\r\n    ;\r\n    let AuditEventOptional =\r\n        T\r\n        | where EventSchema == 'AuditEvent'\r\n            and (optional)\r\n        | invoke ASIM_ProjectAuditEventOptional()\r\n    ;\r\n    let FileEvent =\r\n        T\r\n        | where EventSchema == 'FileEvent'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectFileEventSchema()\r\n    ;\r\n    let FileEventOptional =\r\n        T\r\n        | where EventSchema == 'FileEvent'\r\n            and (optional)\r\n        | invoke ASIM_ProjectFileEventOptional()\r\n    ;\r\n    let ProcessEvent =\r\n        T\r\n        | where EventSchema == 'ProcessEvent'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectProcessEventSchema()\r\n    ;\r\n    let ProcessEventOptional =\r\n        T\r\n        | where EventSchema == 'ProcessEvent'\r\n            and (optional)\r\n        | invoke ASIM_ProjectProcessEventOptional()\r\n    ;\r\n    let RegistryEvent =\r\n        T\r\n        | where EventSchema == 'RegistryEvent'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectRegistryEventSchema()\r\n    ;\r\n    let RegistryEventOptional =\r\n        T\r\n        | where EventSchema == 'RegistryEvent'\r\n            and (optional)\r\n        | invoke ASIM_ProjectRegistryEventOptional()\r\n    ;\r\n    let WebSession =\r\n        T\r\n        | where EventSchema == 'WebSession'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectWebSessionSchema()\r\n    ;\r\n    let WebSessionOptional =\r\n        T\r\n        | where EventSchema == 'WebSession'\r\n            and (optional)\r\n        | invoke ASIM_ProjectWebSessionOptional()\r\n    ;\r\n    let Dns =\r\n        T\r\n        | where EventSchema == 'Dns'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectDnsSchema()\r\n    ;\r\n    let DnsOptional =\r\n        T\r\n        | where EventSchema == 'Dns'\r\n            and (optional)\r\n        | invoke ASIM_ProjectDnsOptional()\r\n    ;\r\n    let UserManagement =\r\n        T\r\n        | where EventSchema == 'UserManagement'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectUserManagementSchema()\r\n    ;\r\n    let UserManagementOptional =\r\n        T\r\n        | where EventSchema == 'UserManagement'\r\n            and (optional)\r\n        | invoke ASIM_ProjectUserManagementOptional()\r\n    ;\r\n    let Dhcp =\r\n        T\r\n        | where EventSchema == 'Dhcp'\r\n            and not(optional)\r\n        | invoke ASIM_ProjectDhcpSchema()\r\n    ;\r\n    let DhcpOptional =\r\n        T\r\n        | where EventSchema == 'Dhcp'\r\n            and (optional)\r\n        | invoke ASIM_ProjectDhcpOptional()\r\n    ;\r\n    union isfuzzy = false\r\n        Authentication\r\n      , AuthenticationOptional\r\n      , AuditEvent\r\n      , AuditEventOptional\r\n      , FileEvent\r\n      , FileEventOptional\r\n      , ProcessEvent\r\n      , ProcessEventOptional\r\n      , RegistryEvent\r\n      , RegistryEventOptional\r\n      , WebSession\r\n      , WebSessionOptional\r\n      , Dns\r\n      , DnsOptional\r\n      , UserManagement\r\n      , UserManagementOptional\r\n      , Dhcp\r\n      , DhcpOptional\r\n      , NetworkSession\r\n      , NetworkSessionOptional\r\n    | project-away _ItemId*",
        "functionParameters": "T:(EventSchema:string), optional:bool=true",
        "functionAlias": "ASIM_ProjectSchema"
      }
    }
  ]
}