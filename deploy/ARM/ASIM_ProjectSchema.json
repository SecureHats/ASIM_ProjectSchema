{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "5449866084711742575"
    }
  },
  "parameters": {
    "Workspace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('Workspace'), 'ASIM_ProjectSchema')]",
      "properties": {
        "version": 1,
        "category": "ASIM",
        "displayName": "ASIM_ProjectSchema",
        "query": "    let NetworkSessionSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'NetworkSession'\r\n        | invoke ASIM_ProjectNetworkSessionSchema()\r\n      )\r\n    ;\r\n    let NetworkSessionOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'NetworkSession'\r\n        | invoke ASIM_ProjectNetworkSessionOptional()\r\n      )\r\n    ;\r\n    let AuthenticationSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'Authentication'\r\n        | invoke ASIM_ProjectAuthenticationSchema()\r\n      )\r\n    ;\r\n    let AuthenticationOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'Authentication'\r\n        | invoke ASIM_ProjectAuthenticationOptional()    \r\n      )\r\n    ;\r\n    let AuditEventSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'AuditEvent'\r\n        | invoke ASIM_ProjectAuditEventSchema()\r\n      )\r\n    ;\r\n    let AuditEventOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'AuditEvent'\r\n        | invoke ASIM_ProjectAuditEventOptional()\r\n      )\r\n    ;\r\n    let FileEventSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'FileEvent'\r\n        | invoke ASIM_ProjectFileEventSchema()\r\n      )\r\n    ;\r\n    let FileEventOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'FileEvent'\r\n        | invoke ASIM_ProjectFileEventOptional()\r\n      )\r\n    ;\r\n    let ProcessEventSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'ProcessEvent'\r\n        | invoke ASIM_ProjectProcessEventSchema()\r\n      )\r\n    ;\r\n    let ProcessEventOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'ProcessEvent'\r\n        | invoke ASIM_ProjectProcessEventOptional()\r\n      )\r\n    ;\r\n    let RegistryEventSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'RegistryEvent'\r\n        | invoke ASIM_ProjectRegistryEventSchema()\r\n      )\r\n    ;\r\n    let RegistryEventOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'RegistryEvent'\r\n        | invoke ASIM_ProjectRegistryEventOptional()\r\n      )\r\n    ;\r\n    let WebSessionSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'WebSession'\r\n        | invoke ASIM_ProjectWebSessionSchema()\r\n      )\r\n    ;\r\n    let WebSessionOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'WebSession'\r\n        | invoke ASIM_ProjectWebSessionOptional()\r\n      )\r\n    ;\r\n    let DnsSchema =\r\n      materialize(\r\n        T\r\n        | where not(optional)\r\n        | where EventSchema == 'Dns'\r\n        | invoke ASIM_ProjectDnsSchema()\r\n      )\r\n    ;\r\n    let DnsOptional =\r\n      materialize(\r\n        T\r\n        | where (optional)\r\n        | where EventSchema == 'Dns'\r\n        | invoke ASIM_ProjectDnsOptional()\r\n      )\r\n    ;\r\n    union isfuzzy = false \r\n        *Schema\r\n      , *Optional\r\n    | project-away _ItemId*",
        "functionParameters": "T:(TimeGenerated:datetime, _ItemId:string, EventSchema:string), optional:bool=false",
        "functionAlias": "ASIM_ProjectSchema"
      }
    }
  ]
}