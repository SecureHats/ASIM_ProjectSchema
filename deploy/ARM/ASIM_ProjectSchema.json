{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "10929866161608782398"
    }
  },
  "parameters": {
    "Workspace": {
      "type": "string",
      "defaultValue": "gsia002-it-weu-a01-stl-oms01",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('Workspace'), 'ASIM_ProjectSchema')]",
      "properties": {
        "version": 1,
        "category": "ASIM",
        "displayName": "ASIM_ProjectSchema",
        "query": "    let NetworkSession =\r\n    T\r\n    | where EventSchema == 'NetworkSession'\r\n    | invoke ASIM_ProjectNetworkSessionSchema()\r\n    ;\r\n    let NetworkSessionOptional =  \r\n    T\r\n    | where EventSchema == 'NetworkSession' \r\n    | where (optional)\r\n    | invoke ASIM_ProjectNetworkSessionOptional()\r\n    ;\r\n    let Authentication =\r\n    T\r\n    | where EventSchema == 'Authentication'\r\n    | invoke ASIM_ProjectAuthenticationSchema()\r\n    ;\r\n    let AuthenticationOptional =\r\n    T\r\n    | where EventSchema == 'Authentication'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectAuthenticationOptional()\r\n    ;\r\n    let AuditEvent =\r\n    T\r\n    | where EventSchema == 'AuditEvent'\r\n    | invoke ASIM_ProjectAuditEventSchema()\r\n    ;\r\n    let AuditEventOptional = \r\n    T\r\n    | where EventSchema == 'AuditEvent'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectAuditEventOptional()\r\n    ;\r\n    let FileEvent =\r\n    T\r\n    | where EventSchema == 'FileEvent'\r\n    | invoke ASIM_ProjectFileEventSchema()\r\n    ;\r\n    let FileEventOptional = \r\n    T\r\n    | where EventSchema == 'FileEvent'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectFileEventOptional()\r\n    ;\r\n    let ProcessEvent =\r\n    T\r\n    | where EventSchema == 'ProcessEvent'\r\n    | invoke ASIM_ProjectProcessEventSchema()\r\n    ;\r\n    let ProcessEventOptional = \r\n    T\r\n    | where EventSchema == 'ProcessEvent'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectProcessEventOptional()\r\n    ;\r\n    let RegistryEvent =\r\n    T\r\n    | where EventSchema == 'RegistryEvent'\r\n    | invoke ASIM_ProjectRegistryEventSchema()\r\n    ;\r\n    let RegistryEventOptional = \r\n    T\r\n    | where EventSchema == 'RegistryEvent'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectRegistryEventOptional()\r\n    ;\r\n    let WebSession =\r\n    T\r\n    | where EventSchema == 'WebSession'\r\n    | invoke ASIM_ProjectWebSessionSchema()\r\n    ;\r\n    let WebSessionOptional = \r\n    T\r\n    | where EventSchema == 'WebSession'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectWebSessionOptional()\r\n    ;\r\n    let Dns =\r\n    T\r\n    | where EventSchema == 'Dns'\r\n    | invoke ASIM_ProjectDnsSchema()\r\n    ;\r\n    let DnsOptional = \r\n    T\r\n    | where EventSchema == 'Dns'\r\n    | where (optional)\r\n    | invoke ASIM_ProjectDnsOptional()\r\n    ;\r\n    union isfuzzy = false \r\n        (NetworkSession | join kind=leftouter NetworkSessionOptional on $left._ItemId == $right._ItemId)\r\n      , (Authentication | join kind=leftouter AuthenticationOptional on $left._ItemId == $right._ItemId)\r\n      , (AuditEvent | join kind=leftouter AuditEventOptional on $left._ItemId == $right._ItemId)\r\n      , (FileEvent | join kind=leftouter FileEventOptional on $left._ItemId == $right._ItemId)\r\n      , (ProcessEvent | join kind=leftouter ProcessEventOptional on $left._ItemId == $right._ItemId)\r\n      , (RegistryEvent | join kind=leftouter RegistryEventOptional on $left._ItemId == $right._ItemId)\r\n      , (WebSession | join kind=leftouter WebSessionOptional on $left._ItemId == $right._ItemId)\r\n      , (Dns | join kind=leftouter DnsOptional on $left._ItemId == $right._ItemId)\r\n      | project-away _ItemId*",
        "functionParameters": "T:(TimeGenerated:datetime, _ItemId:string, EventSchema:string), optional:bool=false",
        "functionAlias": "ASIM_ProjectSchema"
      }
    }
  ]
}