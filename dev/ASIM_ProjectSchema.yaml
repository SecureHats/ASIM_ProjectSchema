$schema: https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#
contentVersion: 1.0.0.0
parameters:
  Workspace:
    type: string
    metadata:
      description: The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group.
  WorkspaceRegion:
    type: string
    defaultValue: '[resourceGroup().location]'
    metadata:
      description: The region of the selected workspace. The default value will use the Region selection above.
resources:
- type: Microsoft.OperationalInsights/workspaces
  apiVersion: 2017-03-15-preview
  name: "[parameters('Workspace')]"
  location: "[parameters('WorkspaceRegion')]"
  resources:
  - type: savedSearches
    apiVersion: '2020-08-01'
    name: ASIM_ProjectSchema
    dependsOn:
    - "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
    properties:
      etag: '*'
      displayName: ASIM_ProjectSchema
      category: ASIM
      FunctionAlias: ASIM_ProjectSchema
      query: |-
        let NetworkSession =
        T
        | where EventSchema == 'NetworkSession'
        | invoke ASIM_ProjectNetworkSessionSchema()
        ;
        let Authentication =
        T
        | where EventSchema == 'Authentication'
        | invoke ASIM_ProjectAuthenticationSchema()
        ;
        let AuditEvent =
        T
        | where EventSchema == 'AuditEvent'
        | invoke ASIM_ProjectAuditEventSchema()
        ;
        let FileEvent =
        T
        | where EventSchema == 'FileEvent'
        | invoke ASIM_ProjectFileEventSchema()
        ;
        let ProcessEvent =
        T
        | where EventSchema == 'ProcessEvent'
        | invoke ASIM_ProjectProcessEventSchema()
        ;
        let RegistryEvent =
        T
        | where EventSchema == 'RegistryEvent'
        | invoke ASIM_ProjectRegistryEventSchema()
        ;
        let WebSession =
        T
        | where EventSchema == 'WebSession'
        | invoke ASIM_ProjectWebSessionSchema()
        ;
        let Dns =
        T
        | where EventSchema == 'Dns'
        | invoke ASIM_ProjectDnsSchema()
        ;
        union isfuzzy = false 
          NetworkSession
          , Authentication
          , AuditEvent
          , FileEvent
          , ProcessEvent
          , RegistryEvent
          , WebSession
          , Dns
      version: 1
      functionParameters: T:(TimeGenerated:datetime), EventSchema:string='*'